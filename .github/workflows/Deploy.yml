name: Deploy
on:
  push:
    branches:
      - main
    paths:
      - "**/*.jmd"
  workflow_dispatch:
  pull_request:
    branches:
      - main

jobs:
  generate-job-strategy-matrix:
    runs-on: ubuntu-latest
    outputs:
      job-strategy-matrix: ${{ steps.generate.outputs.job-strategy-matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
      - name: generate for all
        id: generate
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            MATRIX=$( (
              echo '{ "tutorial": ['
              find . -name "*.jmd" | sed -r 's/.\/(.*)/\"\1\"/g' | sed '$!s/$/,/'
              echo ']}'
            ) | jq -c .)
          else
            MATRIX=$( (
              echo '{ "tutorial": ['
              git diff --name-only HEAD HEAD~1 | grep jmd | sed -r 's/(.*)/\"\1\"/g' | sed '$!s/$/,/'
              echo ']}'
            ) | jq -c .)
          fi
          echo $MATRIX
          echo $MATRIX | jq .
          echo "::set-output name=job-strategy-matrix::$MATRIX"

  tutorial:
    needs: generate-job-strategy-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.generate-job-strategy-matrix.outputs.job-strategy-matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: 1
      - name: Build tutorial
        run: |
          bash .github/workflows/build_tutorial.sh ${{ matrix.tutorial }}
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          path: parsed/*

  gh-pages:
    needs: tutorial
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: .
      - name: list
        run: ls -R
      - name: Deploy (main)
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: gh-pages
          folder: markdown

  deploy:
    needs: tutorial
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    env:
      PAT: '${{ secrets.JSOTUTORIALS_TOKEN }}'
      BRANCH: 'jsotutorials-${{ github.event_name }}-${{ github.sha }}'
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          path: .
      - name: list
        run: ls -R
      - name: Clone and commit
        run: |
          git clone https://abelsiqueira:$PAT@github.com/JSSOTemp/JSSOTemp.github.io
          cp -r artifact/* JSSOTemp.github.io/tutorials/
          cd JSSOTemp.github.io
          git config --global user.email "jsotutorials@no.mail"
          git config --global user.name "JSOTutorials bot"
          echo $PAT
          git checkout -b $BRANCH
          git add tutorials
          git commit -am ":robot: Tutorials deployment from $GITHUB_SHA"
          git push -u origin $BRANCH -f
      - name: Create pull request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.JSOTUTORIALS_TOKEN }}
          script: |
            const { issue: { number: issue_number }, repo: { owner, repo }  } = context;
            const { BRANCH } = process.env
            github.rest.pulls.create({
              owner: 'JSSOTemp',
              repo: 'JSSOTemp.github.io',
              title: 'Updates from JSOTutorials',
              body: `Updates from ${BRANCH}`,
              head: `${BRANCH}`,
              base: 'main'
            })
